---
# This playbook deploys the Ansible Tower application (database, web and
# worker daemons) to a single server.

- hosts: primary:secondary:database
  gather_facts: false
  roles:
    - role: check_config_static
      check_config_static_required_vars:
        - tower_package_name
        - tower_package_version
        - tower_package_release
    - role: config_dynamic

- name: "Group nodes by OS distribution"
  hosts: all
  gather_facts: true
  tasks:
    - name: group hosts by distribution
      group_by: key="{{ ansible_distribution }}-{{ ansible_distribution_version }}"
      changed_when: false

- name: "Group supported distributions"
  hosts: RedHat-7*:RedHat-6*:CentOS-7*:CentOS-6*:Ubuntu-12.04:Ubuntu-14.04:OracleLinux-6*:OracleLinux-7*
  gather_facts: false
  tasks:
    - name: group hosts for supported distributions
      group_by: key="supported"
      changed_when: false

- name: "Ensure all node OS distributions are supported"
  hosts: "!supported"
  gather_facts: false
  tasks:
    - name: fail for unsupported distribution
      fail: msg="{{ ansible_distribution }} {{ ansible_distribution_version }}
                 is not a supported OS for a Tower installation.  Supported
                 OSes include Red Hat Enterprise Linux 6/7, CentOS 6/7, or
                 Ubuntu 12.04/14.04."

- name: "Define role discovered variables, usable throughout the playbook"
  hosts: primary:secondary:database
  gather_facts: false
  roles:
    - role: postgres
      postgres_exec_vars_only: true
    - role: httpd
      httpd_exec_vars_only: true
    - role: supervisor
      supervisor_exec_vars_only: true
    - role: awx_install
      awx_install_exec_vars_only: true

- name: "Sanity check and prep Tower node(s)"
  hosts: primary:secondary
  gather_facts: false
  roles:
    - role: preflight
      tags: preflight

    - role: migrations
      tags: migrations
      migrations_database: "{{ config_dynamic_database }}"
      migrations_pg_database: "{{ pg_database }}"
      migrations_tower_version: "{{ tower_version }}"
      migrations_httpd_init_name: "{{ httpd_init_name }}"

- name: "Install postgres database node"
  hosts: database
  gather_facts: false
  roles:
    - role: packages_el
      packages_el_install_tower: false
      packages_el_install_postgres: true
      when: ansible_os_family == "RedHat"

    - role: packages_ubuntu
      packages_ubuntu_install_tower: false
      packages_ubuntu_install_postgres: true
      when: ansible_os_family == "Debian"

    - role: postgres
      tags: postgresql_database
      postgres_allowed_ipv4: "0.0.0.0/0"
      postgres_allowed_ipv6: "::1/128"
      postgres_username: "{{ pg_username }}"
      postgres_password: "{{ pg_password }}"
      postgres_database: "{{ pg_database }}"

    - role: firewalld
      tags: firewalld
      when: ansible_os_family == 'RedHat' and ansible_distribution_major_version == '7'

- name: "Install Tower node(s)"
  hosts: primary:secondary
  gather_facts: false
  roles:
    - role: packages_el
      tags: packages
      packages_el_tower_package_name: "{{ tower_package_name }}"
      packages_el_tower_package_version: "{{ tower_package_version }}"
      when: ansible_os_family == 'RedHat'

    - role: packages_ubuntu
      tags: packages
      packages_ubuntu_tower_package_name: "{{ tower_package_name }}"
      packages_ubuntu_tower_package_version: "{{ tower_package_version }}"
      when: ansible_os_family == 'Debian'

    - role: postgres
      tags: postgresql_primary
      postgres_username: "{{ pg_username }}"
      postgres_password: "{{ pg_password }}"
      postgres_database: "{{ pg_database }}"
      when: "config_dynamic_database == 'internal'"

    - role: redis_conf
      tags: redis
      redis_conf_password: "{{ redis_password }}"

    - role: awx_install
      tags: awx
      awx_install_admin_password: "{{ admin_password }}"
      awx_install_database: "{{ config_dynamic_database }}"
      awx_install_pg_host: "{{ pg_host }}"
      awx_install_pg_port: "{{ pg_port }}"
      awx_install_pg_username: "{{ pg_username }}"
      awx_install_pg_password: "{{ pg_password }}"
      awx_install_pg_database: "{{ pg_database }}"
      awx_install_pg_init_name: "{{ postgres_init_name }}"
      awx_install_redis_password: "{{ redis_password }}"
      awx_install_supervisor_init_name: "{{ sup_init_name }}"
      awx_install_supervisor_socket_location: "{{ sup_socket_location }}"

    - role: supervisor
      tags: supervisor

    - role: httpd
      tags: httpd

    - role: iptables
      tags: iptables
      when: ansible_os_family == 'RedHat'

    - role: firewalld
      tags: firewalld
      when: ansible_os_family == 'RedHat' and ansible_distribution_major_version == '7'

    - role: misc
      tags: misc
